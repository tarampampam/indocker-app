openapi: '3.0.3'
info:
  title: indocker.app internal API
  license: {name: MIT}
  version: '1.0.0'

servers:
  - {url: '/', description: Current server}

paths:
  /api/ping:
    get:
      summary: Ping the server
      operationId: ping
      responses:
        '200': {$ref: '#/components/responses/PingResponse'}

  /api/version:
    get:
      summary: Get application version
      description: Returns the application version
      operationId: getAppVersion
      responses:
        '200': {$ref: '#/components/responses/AppVersionResponse'}

  /api/version/latest:
    get:
      summary: Get latest application version
      description: Returns the latest application version
      operationId: getLatestAppVersion
      responses:
        '200': {$ref: '#/components/responses/AppVersionResponse'}
        '5XX': {$ref: '#/components/responses/ErrorResponse'} # Server error

  /api/routes:
    get:
      summary: List all registered routes
      description: Returns all registered routes
      operationId: listRoutes
      responses:
        '200': {$ref: '#/components/responses/RegisteredRoutesListResponse'}

components:
  responses:
    PingResponse:
      description: Pong response
      content:
        application/json:
          schema:
            type: string
            example: pong

    AppVersionResponse:
      description: Application version information
      content:
        application/json:
          schema:
            type: object
            properties: {version: {type: string, example: '0.0.1', description: Without the 'v' prefix}}
            additionalProperties: false
            required: [version]

    ErrorResponse:
      description: Error response
      content:
        application/json:
          schema:
            type: object
            properties:
              error: {type: string, example: 'Internal server error'}
            additionalProperties: false
            required: [error]

    RegisteredRoutesListResponse:
      description: List of registered routes
      content:
        application/json:
          schema:
            type: object
            properties:
              routes:
                type: array
                items: {$ref: '#/components/schemas/ContainerRoute'}
            additionalProperties: false
            required: [routes]

  schemas:
    ContainerRoute:
      description: Container route information
      type: object
      properties:
        hostname: {type: string, example: 'whoami'}
        urls:
          type: array
          items: {type: string, format: uri, example: 'http://172.19.0.2:8080'}
          minLength: 1
      additionalProperties: false
      required: [hostname, urls]
