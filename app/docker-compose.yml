version: '3.8'

volumes:
  tmp-data: {}
  node-data: {}
  golint-go: {}
  golint-cache: {}

services:
  go: &go
    build: {target: builder}
    environment:
      PS1: '\[\033[1;32m\]\[\033[1;36m\][\u@go] \[\033[1;34m\]\w\[\033[0;35m\] \[\033[1;36m\]# \[\033[0m\]'
      HOME: /tmp
      GOPATH: /tmp
      LOG_LEVEL: debug
    volumes:
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      - tmp-data:/tmp:rw
      - .:/src:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    working_dir: /src
    security_opt: [no-new-privileges:true]

  node: &node
    build: {target: frontend}
    environment:
      PS1: '\[\033[1;32m\]\[\033[1;36m\][\u@node] \[\033[1;34m\]\w\[\033[0;35m\] \[\033[1;36m\]# \[\033[0m\]'
      HOME: /tmp
      NPM_CONFIG_UPDATE_NOTIFIER: false
    volumes:
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      - node-data:/tmp:rw
      - .:/src:rw
    working_dir: /src/web
    security_opt: [no-new-privileges:true]

  app:
    <<: *go
    ports: ['80:8080/tcp', '443:8443/tcp']
    entrypoint: sh -c 'go build -buildvcs=false -o /tmp/app ./cmd/app/ && exec $0 "$@"'
    command: /tmp/app start
    healthcheck:
      test: ['CMD', '/tmp/app', 'start', 'healthcheck']
      interval: 5s
      start_period: 2s

  monitor: # frontend - https://frontend.indocker.app/
    <<: *node
    labels:
      indocker.host: monitor # Open <https://monitor.indocker.app>
      indocker.port: 8080
    command: npm run serve -- --client-web-socket-url 'auto://0.0.0.0:0/ws'
    healthcheck:
      test: ['CMD', 'wget', '--spider', '-q', 'http://127.0.0.1:8080/']
      interval: 2s
      timeout: 2s
      start_period: 5s
      retries: 15

  whoami: # just for a test
    image: containous/whoami:latest
    labels:
      indocker.host: whoami.indocker.app # Open <https://whoami.indocker.app>
      indocker.port: 8080
    command: --port 8080
    security_opt: [no-new-privileges:true]

  golint: # Go code linter, used as a "shortcut" for usage in makefile
    image: golangci/golangci-lint:v1.51-alpine
    environment:
      GOLANGCI_LINT_CACHE: /tmp/golint # <https://github.com/golangci/golangci-lint/blob/v1.33.0/internal/cache/default.go#L68>
    volumes:
      - golint-go:/go:rw # go dependencies will be downloaded on each run without this
      - golint-cache:/tmp/golint:rw
      - .:/src:ro
    working_dir: /src
    security_opt: [no-new-privileges:true]
